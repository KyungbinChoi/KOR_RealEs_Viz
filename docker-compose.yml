version: "3.8"

services:
  postgres:
    build:
      context: ./db
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:  # PostgreSQL이 정상 실행되었는지 확인하는 설정
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      retries: 5
      start_period: 30s

  airflow:
    build:
      context: ./airflow  # airflow 폴더에서 Dockerfile을 사용
      dockerfile: Dockerfile
    container_name: airflow
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy  # PostgreSQL이 완전히 실행된 후 시작되도록 설정
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__WEBSERVER__RBAC: "True"
    healthcheck:  # PostgreSQL이 정상 실행되었는지 확인하는 설정
      test: ["CMD-SHELL", "airflow db check"]
      interval: 10s
      retries: 5
      start_period: 30s
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./airflow/scripts:/opt/airflow/scripts
      - ./airflow/dataset:/opt/airflow/dataset

  jupyter:
    build:
      context: ./jupyter
      dockerfile: Dockerfile
    container_name: jupyter-notebook
    ports:
      - "8888:8888"
    volumes:
      - ./jupyter/notebooks:/home/jovyan/work
    environment:
      JUPYTER_ENABLE_LAB: "yes"  # JupyterLab 인터페이스 활성화
    depends_on:
      - postgres
      
  superset:
    build:
      context: ./superset
    container_name: superset
    restart: always
    environment:
      - SUPERSET_ADMIN_USER=admin
      - SUPERSET_ADMIN_PASSWORD=admin123
      - SUPERSET_ADMIN_EMAIL=admin@example.com
      - SUPERSET_SECRET_KEY=mysecretkey
      - SUPERSET_CONFIG_PATH=/etc/superset/superset_config.py
      - SQLALCHEMY_DATABASE_URI=postgresql://airflow:airflow@postgres:5432/superset_db
    ports:
      - "8088:8088"
    volumes:
      - ./superset:/etc/superset
      - superset_data:/var/lib/superset
    depends_on:
      airflow:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c", "
      while ! pg_isready -h postgres -U airflow; do sleep 2; done;
      superset db upgrade &&
      superset init &&
      superset run -h 0.0.0.0 -p 8088"]

volumes:
  postgres_data:
  superset_data:
